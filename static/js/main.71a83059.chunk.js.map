{"version":3,"sources":["Images/back.jpg","Images/specification.png","Images/analysis.png","Images/design.png","Images/low.png","Images/final.png","Images/avatar.jpg","Images/avatar2.jpeg","Images/avatar3.jpg","Pages/MainPage.js","Components/UploadView.js","Components/TextView.js","Components/Player.js","Components/Settings.js","Components/Header.js","Pages/AppHome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainPage","state","list","name","icon","width","window","innerWidth","handleWindowSizeChange","setState","addEventListener","this","removeEventListener","isMobile","Grid","columns","Row","style","backgroundImage","back","backgroundSize","Column","textAlign","className","map","item","Button","as","onClick","scrollToComponent","offset","align","duration","ease","Icon","href","env","app","ref","Segment","About","basic","Divider","horizontal","Header","Container","fluid","Reports","divided","open","Image","src","spec","size","content","analysis","design","low","final","Members","avatar3","avatar2","avatar1","React","Component","UploadView","props","handleInputChange","e","value","onChangeHandler","event","target","files","length","type","substr","selectedFile","loaded","OKType","onClickHandler","file","data","FormData","append","handleChange","pageNo","theme","bind","Message","margin","negative","color","Form","Group","widths","Input","height","onChange","placeholder","label","disabled","TextView","text","TextArea","Player","audio","document","documentElement","setProperty","colors","console","log","padding","autoPlay","pointing","btnStyle","speakers","key","themes","AppHome","handleSelect","handleChangeSpeed","newValue","sliderSpeed","audioSpeed","Math","pow","toFixed","onClickSave","speaker","gender","onClickCancel","log2","pitch","marginTop","Slider","max","min","step","aria-labelledby","Dropdown","selection","options","selectedLabel","PageHeader","nextProps","Menu","classname","borderless","Item","marginRight","param","childData","callBackendAPI","a","inputType","fileName","requestOptions","method","headers","body","JSON","stringify","inputString","fetch","response","json","status","Error","message","res","url","handleItemClick","activeItem","dataFile","uploadStatus","isSettingsPage","axios","post","then","statusText","outputText","catch","err","Settings","attached","tabular","active","marginBottom","Dimmer","inverted","Loader","marginLeft","generate","App","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","getElementById","URL","process","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.71a83059.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.48d97c0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/specification.eabf6271.png\";","module.exports = __webpack_public_path__ + \"static/media/analysis.7e426827.png\";","module.exports = __webpack_public_path__ + \"static/media/design.b13c8021.png\";","module.exports = __webpack_public_path__ + \"static/media/low.5fac8871.png\";","module.exports = __webpack_public_path__ + \"static/media/final.75f5d52d.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.8eb16382.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar2.45055006.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/avatar3.5d2bc2f7.jpg\";","import React from 'react';\nimport scrollToComponent from 'react-scroll-to-component';\nimport Carousel from 'nuka-carousel';\nimport env from \"./../Assets/env\"\n\nimport {\n    Header,\n    Icon,\n    Segment,\n    Grid,\n    Divider,\n    Container,\n    Button,\n    Image\n} from 'semantic-ui-react'\n\nimport back from \"../Images/back.jpg\";\nimport spec from \"../Images/specification.png\";\nimport analysis from \"../Images/analysis.png\";\nimport design from \"../Images/design.png\";\nimport low from \"../Images/low.png\";\nimport final from \"../Images/final.png\";\nimport avatar1 from \"../Images/avatar.jpg\";\nimport avatar2 from \"../Images/avatar2.jpeg\";\nimport avatar3 from \"../Images/avatar3.jpg\";\n\n\nexport default class MainPage extends React.Component {\n\n    state = {\n        list : [\n            {\n                name: \"About\",\n                icon: \"superscript\"\n            },\n            {\n                name: \"Reports\",\n                icon: \"folder open\"\n            },\n            {\n                name: \"Members\",\n                icon: \"male\"\n            }\n        ],\n        width: window.innerWidth\n    };\n\n    componentWillMount() {\n        window.addEventListener('resize', this.handleWindowSizeChange);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n\n    handleWindowSizeChange = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    render(){\n\n        const {list, width } = this.state;\n\n        const isMobile = width <= 1000;\n\n        return (\n            <Grid columns='equal'>\n\n                {!isMobile ?\n                    <Grid.Row style={{backgroundImage: `url(${back})`, backgroundSize: \"2500px 2050px\"}}>\n                        <Grid.Column textAlign=\"center\">\n                            <br/>\n\n                            <div className=\"c9-text-title\">&Sigma;&nbsp;Sounds</div>\n\n                            <div className=\"c9-text-sub-title\">\n                                Sum of Sounds: Listen to the formulas\n                            </div>\n                            {list.map(item => (\n                                    <Button className=\"c9-btn\"\n                                            as='a'\n                                            onClick={() => scrollToComponent(this[item.name],\n                                                { offset: 0, align: 'top', duration: 700, ease:'inExpo'}) }\n                                    >\n                                        <Icon name={item.icon} />\n                                        {item.name}\n                                    </Button>\n                                )\n                            )}\n\n                            <a href={env.app}>\n                                <Button className=\"c9-btn\">\n                                    <Icon name=\"computer\" />\n                                    Go to app\n                                </Button>\n                            </a>\n\n                            <br/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    : null }\n\n                <Grid.Row className=\"min-width-480\">\n\n                    {!isMobile ? <Grid.Column width={2}/> : <Grid.Column width={1} />}\n\n                    <Grid.Column width={!isMobile ? 12 : 14}>\n                        <section ref={(Segment) => { this.About = Segment; }}>\n                            <Segment basic>\n                                <Divider horizontal className=\"div-margin\">\n                                    <Header as='h1'>ABOUT</Header>\n                                </Divider>\n\n                                <Container fluid className={!isMobile ? \"c9-text-cool\" : \"c9-text-cool-small\"}>\n                                    Nowadays speech synthesis technologies are very popular and there are lots of text-to-speech applications on the market that read books, articles, docs\n                                    in an almost human voice. All of them read plain texts without any problems, but when there are mathematical formulas or equations\n                                    in the text almost all of the text-to-speech applications have trouble with voicing them.\n                                    However, there are people with visual impairments who do research in mathematics or physics and need to read\n                                    scientific articles and books, which usually contain lots of formulas and cannot be read by these applications.\n                                    This motivated our team to develop an application that could voice the mathematical formulas and equations.\n                                    Such a project can be useful for both developers of text-to-speech applications and people with vision problems.\n                                </Container>\n\n                            </Segment>\n                        </section>\n\n                        <section ref={(Segment) => { this.Reports = Segment; }}>\n                            <Segment basic>\n                                <Divider horizontal className=\"div-margin\">\n                                    <Header as='h1'>REPORTS</Header>\n                                </Divider>\n\n                                <Grid columns={5} divided>\n                                    <Grid.Row>\n                                        <Grid.Column\n                                            className=\"cursor\"\n                                            onClick={()=> window.open(\"https://github.com/bilalsiraj/sumOfSounds/blob/master/Reports/Project%20Specifications%20Report.pdf\", \"_blank\")\n                                            }\n                                        >\n                                            <Image src={spec} size=\"massive\" />\n                                            <Container fluid className=\"c9-text-png\" content=\"Specification Report\"/>\n                                        </Grid.Column>\n                                        <Grid.Column\n                                            className=\"cursor\"\n                                            onClick={()=> window.open(\"https://github.com/bilalsiraj/sumOfSounds/blob/master/Reports/Analysis%20Report.pdf\", \"_blank\")}\n                                        >\n                                            <Image src={analysis} size=\"massive\"/>\n                                            <Container fluid className=\"c9-text-png\" content=\"Analysis Report\"/>\n                                        </Grid.Column>\n                                        <Grid.Column\n                                            className=\"cursor\"\n                                            onClick={()=> window.open(\"https://github.com/bilalsiraj/sumOfSounds/blob/master/Reports/High-Level%20Report.pdf\", \"_blank\")}\n                                        >\n                                            <Image src={design} size=\"massive\"/>\n                                            <Container fluid className=\"c9-text-png\" content=\"High-level design Report\"/>\n                                        </Grid.Column>\n                                        <Grid.Column\n                                            className=\"cursor\"\n                                            onClick={()=> window.open(\"https://github.com/bilalsiraj/sumOfSounds/blob/master/Reports/Low-Level%20Design%20Report.pdf\", \"_blank\")}\n                                        >\n                                            <Image src={low} size=\"massive\"/>\n                                            <Container fluid className=\"c9-text-png\" content=\"Low-level design Report\"/>\n                                        </Grid.Column>\n                                        <Grid.Column\n                                            className=\"cursor\"\n                                            onClick={()=> window.open(\"https://github.com/bilalsiraj/sumOfSounds/blob/master/Reports/Final%20Report.pdf\", \"_blank\")}\n                                        >\n                                            <Image src={final} size=\"massive\"/>\n                                            <Container fluid className=\"c9-text-png\" content=\"Final Report\"/>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n\n                            </Segment>\n                        </section>\n\n                        <section ref={(Segment) => { this.Members = Segment; }}>\n                            <Segment basic>\n                                <Divider horizontal className=\"div-margin\">\n                                    <Header as='h1'>MEMBERS</Header>\n                                </Divider>\n\n                                <Grid>\n                                    <Grid.Row>\n                                        <Grid.Column width={4}/>\n                                        <Grid.Column width={8}>\n                                            <Carousel>\n                                                <div>\n                                                    <Image src={avatar3} size=\"massive\"/>\n                                                    <Container fluid className=\"c9-text-png\" content=\"Bilal Siraj\"/>\n                                                    <br/>\n                                                    <br/>\n                                                </div>\n                                                <div>\n                                                    <Image src={avatar2} size=\"massive\"/>\n                                                    <Container fluid className=\"c9-text-png\" content=\"Aliyu Saifullah Vandana\"/>\n                                                    <br/>\n                                                    <br/>\n                                                </div>\n                                                <div>\n                                                    <Image src={avatar1} size=\"massive\"/>\n                                                    <Container fluid className=\"c9-text-png\" content=\"Kasymbek Tashbaev\"/>\n                                                    <br/>\n                                                    <br/>\n                                                </div>\n                                            </Carousel>\n                                        </Grid.Column>\n                                        <Grid.Column width={4}/>\n                                    </Grid.Row>\n                                </Grid>\n                            </Segment>\n                        </section>\n                    </Grid.Column>\n\n                    {!isMobile ? <Grid.Column width={2}/> : <Grid.Column width={1} />}\n\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}","import React from 'react';\r\n\r\nimport {\r\n    Segment, Button, Input, Message, Icon, Form\r\n} from 'semantic-ui-react'\r\n\r\nexport default class UploadView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            theme: this.props.theme,\r\n            selectedFile: null,\r\n            type: null,\r\n            OKType: 2,\r\n            pageNo: 1,\r\n        };\r\n\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange = (e, { name, value }) => {\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onChangeHandler = event => {\r\n\r\n        if(event.target.files.length > 0) {\r\n            let type = event.target.files[0].type;\r\n            if (event.target.files[0].name.substr(event.target.files[0].name.length - 3) === \"tex\") {\r\n                type = \"tex\";\r\n            }\r\n\r\n            this.setState({\r\n                selectedFile: event.target.files[0],\r\n                loaded: 0,\r\n                type: type,\r\n                OKType: type === \"application/pdf\" | type === \"image/jpeg\" | type === \"image/png\" | type === \"tex\"\r\n            });\r\n        }\r\n    };\r\n\r\n    onClickHandler = () => {\r\n        const file = this.state.selectedFile;\r\n        const data = new FormData();\r\n        data.append('file', file);\r\n        this.props.handleChange(\"uploadStatus\", \"work\");\r\n        this.props.handleChange(\"inputType\", this.state.type);\r\n        this.props.handleChange(\"dataFile\", data);\r\n        this.props.handleChange(\"fileName\", file.name);\r\n        this.props.handleChange(\"pageNo\", this.state.pageNo);\r\n        this.props.handleChange(\"status\", null);\r\n    };\r\n\r\n    render(){\r\n\r\n        const {type, OKType, theme, pageNo } = this.state;\r\n\r\n        return (\r\n\r\n            <Segment basic>\r\n\r\n                {OKType === 0 ?\r\n                    <Message\r\n                        style={{width: \"95%\",  margin: \"0 1% 3% 2%\"}}\r\n                        negative\r\n                    >\r\n                        <Icon name='stop circle' />\r\n                        \"{type}\" is not supported. Please upload only pdf, jpeg, png or tex files.\r\n                    </Message>\r\n                    :\r\n                    <Message\r\n                        style={{margin: \"0 1% 3% 1%\"}}\r\n                        color={theme}\r\n                    >\r\n                        <Icon name='help' />\r\n                        The following file types are supported: pdf, jpeg, png, tex.\r\n                    </Message>\r\n                }\r\n\r\n                <Form size='large' style={{margin: \"1%\"}}>\r\n                    <Form.Group widths=\"equal\">\r\n                        <Form.Input\r\n                            style={{height: 120}}\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            size=\"medium\"\r\n                            color={theme}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                {type === \"application/pdf\" ?\r\n                    <Input style={{width: \"33%\", margin: \"1%\"}}\r\n                           type=\"number\"\r\n                           size=\"medium\"\r\n                           placeholder='Page number'\r\n                           value={pageNo}\r\n                           name=\"pageNo\"\r\n                           onChange={this.handleInputChange}\r\n                           color={theme}\r\n                    />\r\n\r\n                    : null\r\n                }\r\n\r\n                <Button\r\n                    style={{margin: \"1%\", width: \"50%\"}}\r\n                    icon=\"upload\"\r\n                    label='Upload'\r\n                    disabled={OKType !== 1 || pageNo === null || pageNo < 1}\r\n                    color={theme}\r\n                    onClick={ this.onClickHandler }\r\n                />\r\n            </Segment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Segment, Button, Message, Icon, Form\r\n} from 'semantic-ui-react'\r\n\r\nexport default class TextView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            theme: this.props.theme,\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n    }\r\n\r\n    handleInputChange = (e, { name, value }) => {\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onClickHandler = () => {\r\n        this.props.handleChange(\"uploadStatus\", \"work\");\r\n        this.props.handleChange(\"inputType\", \"text\");\r\n        this.props.handleChange(\"text\", this.state.text);\r\n        this.props.handleChange(\"status\", null);\r\n    };\r\n\r\n    render(){\r\n\r\n        const { text, theme } = this.state;\r\n\r\n        return (\r\n\r\n            <Segment basic>\r\n\r\n                <Message\r\n                    style={{margin: \"0 1% 3% 1%\"}}\r\n                    color={theme}\r\n                >\r\n                    <Icon name='help' />\r\n                    Copy and paste the LaTeX string to the text bar.\r\n                </Message>\r\n\r\n                <Form size='large' style={{margin: \"1%\"}}>\r\n                    <Form.Group widths=\"equal\">\r\n                        <Form.TextArea\r\n                            fluid\r\n                            style={{color: \"#1F83AB\"}}\r\n                            name = \"text\"\r\n                            label = \"LaTeX string\"\r\n                            value={text}\r\n                            color={theme}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <Button\r\n                    style={{margin: \"1%\", width: \"50%\"}}\r\n                    icon=\"arrow alternate circle up\"\r\n                    label='Submit'\r\n                    color={theme}\r\n                    onClick={ this.onClickHandler }\r\n                />\r\n            </Segment>\r\n        )\r\n    }\r\n}","import AudioPlayer from 'react-h5-audio-player';\r\nimport '../player.scss';\r\nimport React from 'react';\r\nimport colors from \"./../Assets/colors\"\r\nimport env from \"./../Assets/env\"\r\n\r\nimport {\r\n    Segment, Button, Divider, Header\r\n} from 'semantic-ui-react'\r\n\r\nexport default class Player extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            theme: this.props.theme,\r\n            audio: this.props.audio,\r\n        };\r\n\r\n        document.documentElement.style.setProperty('--rhap_theme-color', colors[this.props.theme]);\r\n        document.documentElement.style.setProperty('--rhap_bar-color', colors[this.props.theme]);\r\n        document.documentElement.style.setProperty('--rhap_time-color', colors[this.props.theme]);\r\n\r\n        console.log(colors[this.state.color]);\r\n\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n    }\r\n\r\n\r\n    onClickHandler = () => {\r\n        window.open(\"http://\" + env[\"url\"] + \"/download\", \"_blank\");\r\n    };\r\n\r\n    render(){\r\n\r\n        const {theme, audio} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <AudioPlayer\r\n                    style={{height: 110, padding: 18}}\r\n                    autoPlay\r\n                    src={audio}\r\n                    color={theme}\r\n                />\r\n\r\n                <Button\r\n                    style={{\"margin-top\":\"15px\"}}\r\n                    color={theme}\r\n                    content='Download'\r\n                    icon='download'\r\n                    onClick={this.onClickHandler}\r\n                    label={{ basic: true, color: 'white', pointing: 'left', content: 'output.mp3' }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport {Button, Divider, Form, Header, Segment} from \"semantic-ui-react\";\r\n\r\nconst btnStyle = {\r\n    margin: \"1% 4% 0 4%\",\r\n};\r\n\r\nconst speakers = [\r\n    { key: 'en-US-Standard-B', text: 'en-US-Standard-B', value: 'en-US-Standard-B' },\r\n    { key: 'en-US-Standard-C', text: 'en-US-Standard-C', value: 'en-US-Standard-C' },\r\n    { key: 'en-US-Standard-D', text: 'en-US-Standard-D', value: 'en-US-Standard-D' },\r\n    { key: 'en-US-Wavenet-A', text: 'en-US-Wavenet-A', value: 'en-US-Wavenet-A' },\r\n    { key: 'en-US-Wavenet-B', text: 'en-US-Wavenet-B', value: 'en-US-Wavenet-B' },\r\n    { key: 'en-US-Wavenet-C', text: 'en-US-Wavenet-C', value: 'en-US-Wavenet-C' },\r\n    { key: 'en-US-Wavenet-D', text: 'en-US-Wavenet-D', value: 'en-US-Wavenet-D' },\r\n    { key: 'en-US-Wavenet-E', text: 'en-US-Wavenet-E', value: 'en-US-Wavenet-E' },\r\n    { key: 'en-US-Wavenet-F', text: 'en-US-Wavenet-F', value: 'en-US-Wavenet-F' },\r\n];\r\n\r\nconst genders = [\r\n    { key: 'MALE', text: 'MALE', value: 'MALE' },\r\n    { key: 'FEMALE', text: 'FEMALE', value: 'FEMALE' },\r\n];\r\n\r\nconst themes = [\r\n    { key: 'black', text: 'Black', value: 'black' },\r\n    { key: 'grey', text: 'Grey', value: 'grey' },\r\n    { key: 'red', text: 'Red', value: 'red' },\r\n    { key: 'orange', text: 'Orange', value: 'orange' },\r\n    { key: 'yellow', text: 'Yellow', value: 'yellow' },\r\n    { key: 'olive', text: 'Olive', value: 'olive' },\r\n    { key: 'green', text: 'Green', value: 'green' },\r\n    { key: 'teal', text: 'Teal', value: 'teal' },\r\n    { key: 'blue', text: 'Blue', value: 'blue' },\r\n    { key: 'violet', text: 'Violet', value: 'violet' },\r\n    { key: 'purple', text: 'Purple', value: 'purple' },\r\n    { key: 'brown', text: 'Brown', value: 'brown' },\r\n];\r\n\r\nconst speedMax = 2;\r\nconst speedMin = -2;\r\nclass AppHome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            audioSpeed: this.props.audioSpeed,\r\n            sliderSpeed: Math.log2(this.props.audioSpeed),\r\n            speaker: this.props.speaker,\r\n            gender: this.props.gender,\r\n            theme: this.props.theme,\r\n        };\r\n    }\r\n\r\n    handleSelect = (e, { name, value }) => {\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleChangeSpeed = (event, newValue) => {\r\n        this.setState({\r\n            sliderSpeed: newValue,\r\n            audioSpeed: Math.pow(2, newValue).toFixed(2),\r\n        })\r\n    };\r\n\r\n    onClickSave = () => {\r\n        const { audioSpeed, speaker, gender, theme} = this.state;\r\n\r\n        this.props.handleChange(\"audioSpeed\", audioSpeed);\r\n        this.props.handleChange(\"speaker\", speaker);\r\n        this.props.handleChange(\"gender\", gender);\r\n        this.props.handleChange(\"theme\", theme);\r\n        this.props.handleChange(\"isSettingsPage\", 0);\r\n    };\r\n\r\n    onClickCancel = () => {\r\n        this.props.handleChange(\"isSettingsPage\", 0);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { audioSpeed, speaker, pitch, theme, gender, sliderSpeed} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Divider horizontal>\r\n                    <Header className=\"c9-text-big\" color=\"black\"> Settings </Header>\r\n                </Divider>\r\n                <Segment\r\n                    color={theme}\r\n                    style={{marginTop: 10, padding: 25}}\r\n                >\r\n                    <Form>\r\n                        <label>\r\n                            Audio speed: {audioSpeed}\r\n                        </label>\r\n                        <Slider\r\n                            style={{color: theme}}\r\n                            value={sliderSpeed}\r\n                            onChange={this.handleChangeSpeed}\r\n                            max={speedMax}\r\n                            min={speedMin}\r\n                            step={0.1}\r\n                            aria-labelledby=\"continuous-slider\"\r\n                        />\r\n\r\n                        <label>\r\n                            Pitch: {pitch}\r\n                        </label>\r\n\r\n                        <Form.Dropdown fluid selection\r\n                                       name=\"speaker\"\r\n                                       label=\"Speaker\"\r\n                                       options={speakers}\r\n                                       selectedLabel={speaker}\r\n                                       placeholder={speaker}\r\n                                       onChange={this.handleSelect}\r\n                        />\r\n\r\n                        {/*<Form.Dropdown fluid selection*/}\r\n                        {/*               name=\"gender\"*/}\r\n                        {/*               label=\"Gender\"*/}\r\n                        {/*               options={genders}*/}\r\n                        {/*               value={gender}*/}\r\n                        {/*               onChange={this.handleSelect}*/}\r\n                        {/*/>*/}\r\n\r\n                        <Form.Dropdown fluid selection\r\n                                       name=\"theme\"\r\n                                       label=\"Theme\"\r\n                                       options={themes}\r\n                                       value={theme}\r\n                                       onChange={this.handleSelect}\r\n                        />\r\n\r\n                        <Button.Group\r\n                            color={theme}\r\n                            style={{width: \"46%\"}}\r\n                        >\r\n                            <Button\r\n                                style={btnStyle}\r\n                                fluid\r\n                                size='large'\r\n                                onClick={() => this.onClickCancel()}\r\n                                color={theme}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                style={btnStyle}\r\n                                fluid\r\n                                size='large'\r\n                                onClick={() => this.onClickSave()}\r\n                                color={theme}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </Button.Group>\r\n                    </Form>\r\n\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppHome;","import React, { Component } from 'react';\nimport {Button, Menu, Header} from 'semantic-ui-react';\n\nexport default class PageHeader extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            theme: this.props.theme,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.theme !== this.state.theme) {\n            this.setState({ theme: nextProps.theme });\n        }\n    }\n\n    render() {\n\n        const theme = this.state.theme;\n\n        return (\n            <Menu color={theme} widths={2} size=\"massive\" classname=\"min-width-480\" borderless>\n\n                <Menu.Item/>\n\n                <Menu.Item>\n                    <Header\n                        className=\"header-text\"\n                        color={theme}\n                    >\n                        Sum of Sounds\n                    </Header>\n                </Menu.Item>\n\n                <Menu.Item >\n                    <Button\n                        style={{marginRight: '25%'}}\n                        icon='setting'\n                        color={theme}\n                        size=\"tiny\"\n                        onClick={ () => this.props.handleChange(\"isSettingsPage\", 1)}\n                    />\n                </Menu.Item>\n            </Menu>\n        )\n    }\n}","import React, { Component } from 'react';\r\nimport {Button, Dimmer, Divider, Grid, Header, Icon, Image, Loader, Menu, Message, Segment} from \"semantic-ui-react\";\r\nimport UploadView from \"../Components/UploadView\";\r\nimport TextView from \"../Components/TextView\";\r\nimport Player from \"../Components/Player\";\r\nimport Settings from \"../Components/Settings\";\r\nimport PageHeader from \"../Components/Header\";\r\nimport axios from 'axios';\r\n\r\nimport env from \"./../Assets/env\"\r\n\r\nclass AppHome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFile: null,\r\n            activeItem: 'upload',\r\n            uploadStatus: 'none',\r\n            theme: this.props.theme,\r\n            isSettingsPage: 0,\r\n            audioSpeed: 1.0,\r\n            speaker: 'en-US-Standard-B',\r\n            gender: 'FEMALE',\r\n            fileName: null,\r\n            pageNo: null,\r\n            inputType: null,\r\n            text: null,\r\n            audio: null,\r\n        };\r\n    }\r\n\r\n    handleChange = (param, childData) => {\r\n        this.setState({[param]: childData})\r\n    };\r\n\r\n    async generate() {\r\n        // Call our fetch function below once the component mounts\r\n        this.setState({\r\n            uploadStatus: \"generate\",\r\n        });\r\n\r\n        if(this.state.inputType !== \"text\") {\r\n            await axios.post(\"http://\" + env.url + \"/upload\", this.state.dataFile, {})\r\n                .then(res => { // then print response status\r\n                    console.log(res.statusText)\r\n                });\r\n        }\r\n\r\n        this.callBackendAPI()\r\n            .then(res =>\r\n                this.setState({\r\n                    outputText: res.text,\r\n                    status: res.status,\r\n                    uploadStatus: \"done\",\r\n                }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callBackendAPI = async () => {\r\n        const { inputType, text, pageNo, gender, speaker, audioSpeed, fileName } = this.state;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                inputType: inputType,\r\n                inputString: text,\r\n                pageNo: pageNo,\r\n                audioSpeed: audioSpeed,\r\n                fileName: fileName,\r\n                speaker: speaker,\r\n                gender: gender,\r\n            })\r\n        };\r\n\r\n        const response = await fetch('/api/generate', requestOptions);\r\n        const body = await response.json();\r\n\r\n        if (response.status !== 200) {\r\n            throw Error(body.message)\r\n        }\r\n        \r\n        const res = await fetch(\"/output.mp3\");\r\n\r\n        this.setState({\r\n            audio: res.url\r\n        });\r\n\r\n        return body;\r\n    };\r\n\r\n    handleItemClick = (e, { value }) => this.setState({ activeItem: value });\r\n\r\n    render() {\r\n\r\n        const { activeItem, uploadStatus, theme, isSettingsPage, gender, audioSpeed, speaker, audio, status } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <PageHeader theme={theme} handleChange={this.handleChange} />\r\n\r\n                <Grid columns='equal'>\r\n\r\n                    <Grid.Column width={4}/>\r\n\r\n                    <Grid.Column width={8}>\r\n\r\n                        {isSettingsPage ?\r\n                            <Settings theme={theme} handleChange={this.handleChange} gender={gender} audioSpeed={audioSpeed} speaker={speaker}/>\r\n                            :\r\n                            <div>\r\n                                <Segment basic>\r\n                                    <div>\r\n                                        <Divider horizontal>\r\n                                            <Header className=\"c9-text-big\" color=\"black\" >Upload Method</Header>\r\n                                        </Divider>\r\n\r\n                                        <Menu attached='top' tabular color={theme}>\r\n                                            <Menu.Item\r\n                                                name='Upload Document'\r\n                                                value='upload'\r\n                                                active={activeItem === 'upload'}\r\n                                                onClick={this.handleItemClick}\r\n                                                color={theme}\r\n                                            />\r\n                                            <Menu.Item\r\n                                                name='Enter Text'\r\n                                                value='text'\r\n                                                active={activeItem === 'text'}\r\n                                                onClick={this.handleItemClick}\r\n                                                color={theme}\r\n                                            />\r\n                                        </Menu>\r\n\r\n                                        <Segment attached=\"bottom\" color={theme}>\r\n                                            {activeItem === 'upload' ? <UploadView handleChange={this.handleChange} theme={theme}/> :\r\n                                                <TextView handleChange={this.handleChange} theme={theme}/>}\r\n                                        </Segment>\r\n                                    </div>\r\n                                </Segment>\r\n\r\n                                <Segment basic color={theme} style={{marginBottom: 125}}>\r\n\r\n                                    {uploadStatus !== 'none' ?\r\n                                        <Divider horizontal>\r\n                                            <Header className=\"c9-text-big\" color=\"black\"> Play </Header>\r\n                                        </Divider>\r\n                                        : null}\r\n\r\n                                    {uploadStatus === 'generate' ?\r\n                                        <Segment color={theme}>\r\n                                            <Dimmer active inverted>\r\n                                                <Loader inverted>Generating an audio file</Loader>\r\n                                            </Dimmer>\r\n\r\n                                            <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\r\n                                        </Segment>\r\n                                        : null}\r\n\r\n                                    {uploadStatus === 'work' ?\r\n                                        <Button\r\n                                            style={{marginLeft: \"1%\", marginRight: \"25%\", width: 250}}\r\n                                            icon=\"file audio\"\r\n                                            label='Generate Audio'\r\n                                            color={theme}\r\n                                            onClick={ () => this.generate() }\r\n                                        />\r\n                                        : null\r\n                                    }\r\n\r\n                                    {status === \"Error\" ?\r\n                                        <Message\r\n                                            style={{width: \"95%\",  margin: \"3% 2% 3% 2%\"}}\r\n                                            negative\r\n                                        >\r\n                                            <Icon name='stop circle' />\r\n                                            The application could not read the file. Try it again.\r\n                                        </Message>\r\n                                        : null }\r\n\r\n                                    {status === \"Good\" ?\r\n                                        <Message\r\n                                            style={{width: \"95%\",  margin: \"3% 2% 3% 2%\"}}\r\n                                            color={theme}\r\n                                        >\r\n                                            <Icon name='help' />\r\n                                            The audio file successfully generated.\r\n                                        </Message>\r\n                                        : null\r\n                                    }\r\n\r\n                                    {uploadStatus === 'done' && status === \"Good\" ? <Player theme={theme} audio={audio}/> : null}\r\n                                </Segment>\r\n                            </div>\r\n                        }\r\n\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column width={4}/>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppHome;","import React from 'react';\nimport './_all.css';\nimport MainPage from './Pages/MainPage'\nimport AppHome from './Pages/AppHome'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nexport default class App extends React.Component {\n\n    state = {\n        theme: 'blue',\n    };\n\n\n    render() {\n\n        const theme = this.state.theme;\n\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <MainPage />\n                    </Route>\n                    <Route path=\"/app\">\n                        <AppHome theme={theme}/>\n                    </Route>\n                </Switch>\n            </Router>\n        );\n\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" messageNo.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}